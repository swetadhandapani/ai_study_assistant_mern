name: MERN CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # -------------------
  # Backend Job
  # -------------------
  backend:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # Cache backend dependencies
      - name: Cache Backend Dependencies
        uses: actions/cache@v3
        with:
          path: backend/node_modules
          key: backend-node-${{ hashFiles('backend/package-lock.json') }}

      - name: Install Backend Dependencies
        working-directory: ./backend
        run: npm install

      - name: Run Backend Linter
        working-directory: ./backend
        run: npm run lint --if-present

      - name: Run Backend Tests
        working-directory: ./backend
        env:
           MONGO_URI: ${{ secrets.MONGO_URI }}
           JWT_SECRET: ${{ secrets.JWT_SECRET }}
           SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
           GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
           OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
           PORT: ${{ secrets.PORT }}
           SENDGRID_VERIFIED_EMAIL: ${{ secrets.SENDGRID_VERIFIED_EMAIL }}
           CLIENT_URL: ${{ secrets.CLIENT_URL }}
        
        
        run: npm test --if-present

  # -------------------
  # Frontend Job
  # -------------------
  frontend:
    runs-on: ubuntu-latest
    needs: backend
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # Cache frontend dependencies
      - name: Cache Frontend Dependencies
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: frontend-node-${{ hashFiles('frontend/package-lock.json') }}

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm install

      - name: Run Frontend Linter
        working-directory: ./frontend
        run: npm run lint --if-present

      - name: Build Frontend
        working-directory: ./frontend
        run: npm run build

      - name: Run Frontend Tests
        working-directory: ./frontend
        run:  npx vitest run --reporter=dot || echo "No tests found, skipping"

